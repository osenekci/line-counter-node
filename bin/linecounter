#!/usr/bin/env node
/**
 * * * * * * * * * * * * * * * * * * * *
 *             Line Counter            *
 * * * * * * * * * * * * * * * * * * * *
 *                                     *
 * Author  : Özgür Senekci             *
 *                                     *
 * Skype   :  socialinf                *
 *                                     *
 * License : The MIT License (MIT)     *
 *                                     *
 * * * * * * * * * * * * * * * * * * * *
 */

var args = {};

process.argv.forEach(function(val){
    if( val.indexOf("--") === 0 ){
        var tokens = val.replace("--", "").split("=");
        args[tokens[0]] = tokens.length === 1 ? true : tokens[1];
    }
});

if( typeof args.path === 'undefined' ){
    args.path = "./";
}

const LineCounter = require("../index").LineCounter;
const ExtensionsFactory = require("../index").ExtensionsFactory;
const Rules = require("../index").Rules;

var lc = new LineCounter();
lc.setPath(args.path);
if( typeof args.extensions !== 'undefined' ){
    lc.setExtensions(ExtensionsFactory.from(args.extensions));
}
else if( typeof args.except !== 'undefined' ){
    lc.setExtensions(ExtensionsFactory.except(args.except));
}
if( typeof args.rules !== 'undefined' ){
    var rules = args.rules.split('|');
    rules.forEach(function(rule){
        if( rule.length === 0 ){
            return;
        }
        if( rule.indexOf("(") > 0 ){
            var ruleTokens = rule.replace("(", "+").replace(")", "").split("+"); // ignoreDir(test) -> ignoreDir+test
            rule = ruleTokens[0];
            var ruleArgs = ruleTokens[1].split(",");
            if( typeof Rules[rule] !== 'undefined' ){
                ruleArgs.unshift(Rules[rule]); // Add rule to the beginning of the array
                lc.addRule.apply(lc, ruleArgs);
            }
            else{
                console.error("Rule not found: " + rule);
            }
        }
        else{
            if( typeof Rules[rule] !== 'undefined' ){
                lc.addRule(Rules[rule]);
            }
            else{
                console.error("Rule not found: " + rule);
            }
        }
    });
}
try{
    lc.getLines(function(result){
        console.log("Total files: " + result.files);
        console.log("Total lines: " + result.lines);
    });
}
catch(e){
    console.log(e.message);
}

